function Appendzero(obj)
{
     if(obj<10) return "0" +""+ obj;
     else return obj;     
}
var formatDate = function(now){
	var   year=now.getFullYear();     
    var   month=now.getMonth()+1;     
    var   date=now.getDate();     
    var   hour=now.getHours();     
    var   minute=now.getMinutes();     
    var   second=now.getSeconds(); 
    var   milSecond = now.getMilliseconds();    
    return   year+"-"+Appendzero(month)+"-"+Appendzero(date)+" "+Appendzero(hour)+":"+Appendzero(minute)+":"+Appendzero(second)+"."+Appendzero(milSecond);     

}

var isArray = function (obj) {
    return obj && !(obj.propertyIsEnumerable('length')) && typeof obj === 'object' && typeof obj.length === 'number';
};
//批量加点
var add = function(con,props){
    var status;
    if(ps.isConnected() && props instanceof Object){
        var keys = Object.keys(props);
        var len = keys.length;
        var status = len;
        for(var i=0;i<len;i++){
            var strKey = keys[i];
            var res = con.add(strKey,props[strKey]);
            if(res.hasOwnProperty("errString")){
                --status;
                continue;
            }
        }
    }else{
        return "请确保数据库已经连接并且参数正确!";
    }
    if(status==len){
        return true;
    }
    return status;
}
//批量写实时值
var write = function(con,datas){
    var status;
    if(con.isConnected()&& datas instanceof Object){
        var keys = Object.keys(datas);
        var len = keys.length;
        var status = len;
        for(var i=0;i<len;i++){
            var strKey = keys[i];
            var res = con.write(strKey,datas[strKey]);
            if(res.hasOwnProperty("errString")){
                --status;
                continue;
            }
        }
    }else{
        return "请确保参数正确!";
    }
    if(status==len){
        return true;
    }
    return status;
}

//批量读取实时值
var read = function(con,tags){
    var result = [];
    if(con.isConnected() && tags instanceof Array){
        for(var i=0;i<tags.length;i++){
            var res = con.read(tags[i]);
            if(res.hasOwnProperty("errString")){
                continue;
            }else{
                result[i] = res;
            }
        }
    }else{
        return "请确保参数正确 !";
    }
    return result;
}


function Node(){
    this.tagType="node";
}

function Analog(){
    this.tagType = "analog";
    this.DataType = "DOUBLE";
}

function Digital(){
    this.tagType = "digital";
}

function String(){
    this.tagType = "string";
    this.DataType = "STRING";
}
module.exports.Node = Node;
module.exports.Analog = Analog;
module.exports.Digital = Digital;
module.exports.String =String;
module.exports.formatDate = formatDate;
module.exports.add = add;
module.exports.write = write;
module.exports.read = read;



