var async = require('async');
var sql = require('mysql');
var configure = require('configure');

function Appendzero(obj)
{
     if(obj<10) return "0" +""+ obj;
     else return obj;     
}
function Append3zero(obj)
{
     if(obj<100) return "0" +""+ obj;
     else return obj;     
}
var formatDate = function(now){
    var   year=now.getFullYear();     
    var   month=now.getMonth()+1;     
    var   date=now.getDate();     
    var   hour=now.getHours();     
    var   minute=now.getMinutes();    
    var   second=now.getSeconds(); 
    var   milSecond = now.getMilliseconds(); 
    //console.log("milsecond:",milSecond);    
    return   year+"-"+Appendzero(month)+"-"+Appendzero(date)+" "+Appendzero(hour)+":"+Appendzero(minute)+":"+Appendzero(second)+"."+Append3zero(milSecond);     
}


function execSql(Connection,tsql,logger,done) {
    Connection.query(tsql,function (e, r,more) {
        if(e){
            console.log("执行失败",e);
            logger.error("执行失败:",e);
            done(e);
        }else{
            done();
           
        }
        
    });
}
// 执行事物
function execTransaction(Connection,sqlArr,logger,done){
    async.series([
        function(done){
            //开始事物
            Connection.beginTransaction(function (err) {
                if(err){
                    logger.error("开始事物失败:",err);
                }else{
                    done();
                }
            });
        },
        function(done){
            //执行sql
            for(var i in sqlArr){
                //循环中含有异步，这里使用闭包执行
                (function(idx){
                    Connection.query(sqlArr[i],function(err){
                        if(err){
                            logger.error("sql语句执行出错:",err);
                            done(err);
                        }else{
                            if(idx>sqlArr.length-2)
                                done();
                        }
                    });
                })(i);
                
            }
        },
        function(done){
            //提交事物
            Connection.commit(function(err){
                if(err){
                    logger.error("提交失败:",err);
                }else{
                    done();
                }
            });
        }
        ],function(err,result){
            if(err){
                logger.error("事物执行失败:",err);
                done(err);
            }else{
                done();
            }
    });
}
function initData(data,value){
    var dealwithData = [];
    for(var i in value){
        data[value[i].name].last = value[i].value.value;
        if(value[i].value.value===1){
            dealwithData.push(value[i]);
        }
    }
    return dealwithData;    
}
//每次来了，先和上一次比较，然后更新上一次数据
function getChange(data,value){
    var dealwithData = [];
    for(var i in value){
        if(value[i].value.value!=data[value[i].name]['last']){
            dealwithData.push(value[i]);
            data[value[i].name]['last'] = value[i].value.value;
        }
    }
    return dealwithData;    
}

function init(sqlCon,data,value,logger,done){
    var dealwithData = initData(data,value);
    var sqlArr = [];
    if(dealwithData.length!=0){
        //构建sql
        for(var i in dealwithData){
            var str = formatDate(dealwithData[i].value.time);
            var strTime  = "'"+str+"'";
            var insert  = "insert into "+configure.tableName+" values('"+dealwithData[i].name+"',"+dealwithData[i].value.value+","+strTime+",'"+data[dealwithData[i].name].type+"',"+dealwithData[i].props.level+",'"+dealwithData[i].props.on+"') on duplicate key ";
            var update = "update time="+strTime+",value="+dealwithData[i].value.value+",level="+dealwithData[i].props.level+",describle='"+dealwithData[i].props.on+"'; ";
            sqlArr.push(insert+update);
        }
        
        //推送执行
        if(sqlArr.length!=0){
            execTransaction(sqlCon,sqlArr,logger,done);
        }else{
            done();
        }
        
    }else{
        done();
    }
}

function update(sqlCon,data,value,logger,done){
    var dealwithData = getChange(data,value);
    var sqlArr = [];
    if(dealwithData.length!=0){
        //构建sql
        for(var i in dealwithData){
            var str = formatDate(dealwithData[i].value.time);
            var strTime  = "'"+str+"'";
            var update='';
            var insert = '';
            if(dealwithData[i].value.value===1){
                insert  = "insert into "+configure.tableName+" values('"+dealwithData[i].name+"',"+dealwithData[i].value.value+","+strTime+",'"+data[dealwithData[i].name].type+"',"+dealwithData[i].props.level+",'"+dealwithData[i].props.on+"') on duplicate key ";   
                update = "update time="+strTime+",value="+dealwithData[i].value.value+",level="+dealwithData[i].props.level+",describle='"+dealwithData[i].props.on+"'; ";
            }else{
               insert  = "insert into "+configure.tableName+" values('"+dealwithData[i].name+"',"+dealwithData[i].value.value+","+strTime+",'"+data[dealwithData[i].name].type+"',"+dealwithData[i].props.level+",'"+dealwithData[i].props.off+"') on duplicate key ";  
               update = "update time="+strTime+",value="+dealwithData[i].value.value+",level="+dealwithData[i].props.level+",describle='"+dealwithData[i].props.off+"'; "; 
            }
               sqlArr.push(insert+update);

        }
        //推送执行
       // console.log(sqlArr);
        if(sqlArr.length!=0){
            execTransaction(sqlCon,sqlArr,logger,done);
        }else{
            done();
        }
    }else{
        done();
    }
}

module.exports.execSql = execSql;
module.exports.init = init;
module.exports.update = update;


